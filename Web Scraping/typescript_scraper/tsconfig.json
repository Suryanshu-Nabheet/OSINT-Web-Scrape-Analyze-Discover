{
  "compilerOptions": {
    /* Base Options */
    "target": "ES2022",                                  /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */
    "module": "NodeNext",                                /* Specify what module code is generated. */
    "moduleResolution": "NodeNext",                      /* Specify how TypeScript looks up a file from a given module specifier. */
    "esModuleInterop": true,                             /* Emit additional JavaScript to ease support for importing CommonJS modules. */
    "forceConsistentCasingInFileNames": true,            /* Ensure that casing is correct in imports. */

    /* Type Checking */
    "strict": true,                                      /* Enable all strict type-checking options. */
    "noImplicitAny": true,                               /* Enable error reporting for expressions and declarations with an implied 'any' type. */
    "strictNullChecks": true,                            /* When type checking, take into account 'null' and 'undefined'. */
    "strictFunctionTypes": true,                         /* When assigning functions, check to ensure parameters and the return values are subtype-compatible. */
    "strictBindCallApply": true,                         /* Check that the arguments for 'bind', 'call', and 'apply' methods match the original function. */
    "strictPropertyInitialization": true,                /* Check for class properties that are declared but not set in the constructor. */
    "noImplicitThis": true,                              /* Enable error reporting when 'this' is given the type 'any'. */
    "useUnknownInCatchVariables": true,                  /* Default catch clause variables as 'unknown' instead of 'any'. */
    "alwaysStrict": true,                                /* Ensure 'use strict' is always emitted. */
    "noFallthroughCasesInSwitch": true,                  /* Enable error reporting for fallthrough cases in switch statements. */
    "noUncheckedIndexedAccess": true,                    /* Add 'undefined' to a type when accessed using an index. */
    "noImplicitOverride": true,                          /* Ensure overriding members in derived classes are marked with an override modifier. */

    /* Completeness */
    "skipLibCheck": true,                                /* Skip type checking all .d.ts files. */

    /* Emit */
    "outDir": "./dist",                                  /* Specify an output folder for all emitted files. */
    "declaration": true,                                 /* Generate .d.ts files from TypeScript and JavaScript files in your project. */
    "sourceMap": true,                                   /* Create source map files for emitted JavaScript files. */
    "removeComments": false,                             /* Disable emitting comments. */
    "preserveConstEnums": true,                          /* Disable erasing 'const enum' declarations in generated code. */
    "newLine": "lf",                                     /* Set the newline character for emitting files. */

    /* Additional Settings */
    "resolveJsonModule": true,                           /* Enable importing .json files. */
    "allowSyntheticDefaultImports": true,                /* Allow 'import x from y' when a module doesn't have a default export. */
    "experimentalDecorators": true,                      /* Enable experimental support for legacy experimental decorators. */
    "emitDecoratorMetadata": true,                       /* Emit design-type metadata for decorated declarations in source files. */
    "noEmitOnError": true,                               /* Disable emitting files if any type checking errors are reported. */
    
    /* Project References */
    "composite": true,                                   /* Enable constraints that allow a TypeScript project to be used with project references. */
    "incremental": true,                                 /* Save .tsbuildinfo files to allow for incremental compilation of projects. */
  },
  "include": [
    "src/**/*.ts"
  ],
  "exclude": [
    "node_modules",
    "dist",
    "**/*.test.ts"
  ]
}

